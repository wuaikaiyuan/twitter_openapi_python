# coding: utf-8

"""
    Twitter OpenAPI

    Twitter OpenAPI(Swagger) specification

    The version of the OpenAPI document: 0.0.1
    Contact: yuki@yuki0311.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from twitter_openapi_python_generated.models.tweet_card_legacy_binding_value_data import TweetCardLegacyBindingValueData

class TestTweetCardLegacyBindingValueData(unittest.TestCase):
    """TweetCardLegacyBindingValueData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TweetCardLegacyBindingValueData:
        """Test TweetCardLegacyBindingValueData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TweetCardLegacyBindingValueData`
        """
        model = TweetCardLegacyBindingValueData()
        if include_optional:
            return TweetCardLegacyBindingValueData(
                boolean_value = True,
                image_color_value = { },
                image_value = twitter_openapi_python_generated.models.tweet_card_legacy_binding_value_data_image.TweetCardLegacyBindingValueDataImage(
                    alt = '', 
                    height = 56, 
                    url = '', 
                    width = 56, ),
                scribe_key = '',
                string_value = '',
                type = '',
                user_value = twitter_openapi_python_generated.models.user_value.UserValue(
                    id_str = '4', )
            )
        else:
            return TweetCardLegacyBindingValueData(
                type = '',
        )
        """

    def testTweetCardLegacyBindingValueData(self):
        """Test TweetCardLegacyBindingValueData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
